define(["exports", "../../../../lit/index.js"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.AppHaxSiteDetails = void 0;

  var _templateObject_d76d8e40c0ce11ecbdb54bb05e9423ad, _templateObject2_d76d8e40c0ce11ecbdb54bb05e9423ad;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  // EXPORT (so make available to other documents that reference this file) a class, that extends LitElement
  // which has the magic life-cycles and developer experience below added
  var AppHaxSiteDetails = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(AppHaxSiteDetails, _LitElement);

    var _super = _createSuper(AppHaxSiteDetails);

    // HTMLElement life-cycle, built in; use this for setting defaults
    function AppHaxSiteDetails() {
      var _this;

      babelHelpers.classCallCheck(this, AppHaxSiteDetails);
      _this = _super.call(this);
      _this.need = 'all need to succeed';
      return _this;
    } // properties that you wish to use as data in HTML, CSS, and the updated life-cycle


    babelHelpers.createClass(AppHaxSiteDetails, [{
      key: "render",
      value: // HTML - specific to Lit
      function render() {
        return (0, _index.html)(_templateObject_d76d8e40c0ce11ecbdb54bb05e9423ad || (_templateObject_d76d8e40c0ce11ecbdb54bb05e9423ad = babelHelpers.taggedTemplateLiteral(["\n      <div class=\"flex-container\">\n        <div class=\"btn-group\">\n          <button>created</button>\n          <button>updated</button>\n          <button>pages</button>\n          <button>URL</button>\n        </div>\n      </div>\n\n        <div class=\"flex-container\">\n          <div class=\"btn-group\">\n            <button>publish</button>\n            <button>copy</button>\n            <button>download</button>\n            <button>delete</button>\n          </div>\n        </div>\n      </div>\n    "])));
      } // HAX specific callback
      // This teaches HAX how to edit and work with your web component

      /**
       * haxProperties integration via file reference
       */

    }], [{
      key: "tag",
      get: // a convention I enjoy so you can change the tag name in 1 place
      function get() {
        return 'app-hax-site-details';
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          need: {
            type: String,
            reflect: true
          }
        };
      } // CSS - specific to Lit

    }, {
      key: "styles",
      get: function get() {
        return (0, _index.css)(_templateObject2_d76d8e40c0ce11ecbdb54bb05e9423ad || (_templateObject2_d76d8e40c0ce11ecbdb54bb05e9423ad = babelHelpers.taggedTemplateLiteral(["\n      :host {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: stretch;\n      }\n\n      .btn-group button {\n        background-color: #3c7ff7;\n        border: 1px solid #3c7ff7;\n        color: white;\n        padding: 15px 30px;\n        cursor: pointer;\n        width: 25%;\n        display: flex;\n      }\n\n      .btn-group:after {\n        content: '';\n        clear: both;\n        display: table;\n      }\n\n      .btn-group button:not(:last-child) {\n        border-right: none;\n      }\n\n      .btn-group button:hover,\n      .btn-group button:focus,\n      .btn-group button:active {\n        background-color: #02286d;\n      }\n\n      .flex-container > div {\n        margin: 8px;\n        flex-direction: 'row';\n        justify-content: 'space-around';\n        align-items: 'center';\n        display: flex;\n        border: 2px solid black;\n      }\n\n      @media (max-width: 500px) {\n        .btn-group button {\n          padding: 4px;\n          margin: 4px 0;\n        }\n        .flex-container > div {\n          margin: 0px;\n        }\n      }\n    "])));
      }
    }]);
    return AppHaxSiteDetails;
  }(_index.LitElement);

  _exports.AppHaxSiteDetails = AppHaxSiteDetails;
  customElements.define(AppHaxSiteDetails.tag, AppHaxSiteDetails);
});