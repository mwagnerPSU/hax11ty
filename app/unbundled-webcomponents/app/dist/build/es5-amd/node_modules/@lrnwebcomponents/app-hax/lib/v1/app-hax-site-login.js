define(["exports", "../../../../lit/index.js", "../../../simple-icon/lib/simple-icons.js", "../../../simple-icon/lib/simple-icon-lite.js", "../../../simple-colors/simple-colors.js", "../../../utils/utils.js", "../../../rpg-character/rpg-character.js", "../../../../mobx/dist/mobx.esm.js", "./AppHaxStore.js", "./AppHaxBackendAPI.js"], function (_exports, _index, _simpleIcons, _simpleIconLite, _simpleColors, _utils, _rpgCharacter, _mobxEsm, _AppHaxStore, _AppHaxBackendAPI) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.AppHaxSiteLogin = void 0;

  var _templateObject_d772e570c0ce11ecbdb54bb05e9423ad, _templateObject2_d772e570c0ce11ecbdb54bb05e9423ad, _templateObject3_d772e570c0ce11ecbdb54bb05e9423ad, _templateObject4_d772e570c0ce11ecbdb54bb05e9423ad;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var AppHaxSiteLogin = /*#__PURE__*/function (_SimpleColors) {
    babelHelpers.inherits(AppHaxSiteLogin, _SimpleColors);

    var _super = _createSuper(AppHaxSiteLogin);

    // HTMLElement life-cycle, built in; use this for setting defaults
    function AppHaxSiteLogin() {
      var _this;

      babelHelpers.classCallCheck(this, AppHaxSiteLogin);
      _this = _super.call(this);
      _this.username = '';
      _this.password = '';
      _this.errorMSG = 'Enter User name';
      _this.hidePassword = true;
      return _this;
    } // properties that you wish to use as data in HTML, CSS, and the updated life-cycle


    babelHelpers.createClass(AppHaxSiteLogin, [{
      key: "firstUpdated",
      value: function firstUpdated() {
        var _this2 = this;

        babelHelpers.get(babelHelpers.getPrototypeOf(AppHaxSiteLogin.prototype), "firstUpdated", this).call(this);
        setTimeout(function () {
          _this2.shadowRoot.querySelector('input').focus();
        }, 0);
      } // updated fires every time a property defined above changes
      // this allows you to react to variables changing and use javascript to perform logic
      // updated(changedProperties) {
      //   changedProperties.forEach((oldValue, propName) => {
      //   });
      // }
      // CSS - specific to Lit

    }, {
      key: "checkUsername",
      value: // eslint-disable-next-line class-methods-use-this
      function checkUsername() {
        var _this3 = this;

        // eslint-disable-next-line prefer-destructuring
        var value = this.shadowRoot.querySelector("#username").value;
        this.hidePassword = false;
        this.errorMSG = '';
        this.username = value;
        setTimeout(function () {
          _this3.shadowRoot.querySelector('input').focus();
        }, 0);
      } // eslint-disable-next-line class-methods-use-this

    }, {
      key: "checkPassword",
      value: function () {
        var _checkPassword = babelHelpers.asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
          var _this4 = this;

          var value, resp;
          return regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  // eslint-disable-next-line prefer-destructuring
                  value = this.shadowRoot.querySelector("#password").value;
                  _context.next = 3;
                  return _AppHaxBackendAPI.AppHaxAPI.makeCall('login', {
                    username: this.username,
                    password: value
                  });

                case 3:
                  resp = _context.sent;

                  if (resp.status_code !== 200) {
                    this.hidePassword = true;
                    this.errorMSG = 'Invalid Username or Password';
                  } else {
                    (0, _utils.localStorageSet)('jwt', resp.jwt);
                    (0, _mobxEsm.autorun)(function () {
                      _AppHaxStore.store.user = {
                        name: _this4.username
                      };
                    });
                    _AppHaxStore.store.jwt = resp.jwt;
                    this.dispatchEvent(new CustomEvent("simple-modal-hide", {
                      bubbles: true,
                      cancelable: true,
                      detail: {}
                    })); // Call BackendAPI? 

                    _AppHaxStore.store.toast("Welcome ".concat(this.username, "! Let's build!"), 5000, {
                      hat: 'construction'
                    }); // @todo need to set local storage from here

                  }

                case 5:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee, this);
        }));

        function checkPassword() {
          return _checkPassword.apply(this, arguments);
        }

        return checkPassword;
      }() // eslint-disable-next-line class-methods-use-this

    }, {
      key: "reset",
      value: function reset() {
        this.errorMSG = '';
        this.username = '';
        this.hidePassword = true;
      }
    }, {
      key: "nameChange",
      value: function nameChange() {
        this.username = this.shadowRoot.querySelector("#username").value;
      }
    }, {
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_d772e570c0ce11ecbdb54bb05e9423ad || (_templateObject_d772e570c0ce11ecbdb54bb05e9423ad = babelHelpers.taggedTemplateLiteral(["\n        <rpg-character seed=\"", "\"></rpg-character> \n        <div id=\"inputcontainer\">\n            ", "\n            <div class=\"external\">\n              <slot name=\"externalproviders\"></slot>\n            </div>\n        </div>\n        <p id=\"errorText\">", "</p>\n        "])), this.username, this.hidePassword ? (0, _index.html)(_templateObject2_d772e570c0ce11ecbdb54bb05e9423ad || (_templateObject2_d772e570c0ce11ecbdb54bb05e9423ad = babelHelpers.taggedTemplateLiteral(["<input id=\"username\" type=\"text\" placeholder=\"abc123@psu.edu\" @input=\"", "\"/>  <button @click=", ">next</button>"])), this.nameChange, this.checkUsername) : (0, _index.html)(_templateObject3_d772e570c0ce11ecbdb54bb05e9423ad || (_templateObject3_d772e570c0ce11ecbdb54bb05e9423ad = babelHelpers.taggedTemplateLiteral(["<p> Hey ", "! <a @click=", ">not you?</a></p><input id=\"password\" type=\"text\" placeholder=\"insert password here\"/>   <button @click=", ">Login</button>"])), this.username, this.reset, this.checkPassword), this.errorMSG);
      }
    }], [{
      key: "tag",
      get: // a convention I enjoy so you can change the tag name in 1 place
      function get() {
        return 'app-hax-site-login';
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(AppHaxSiteLogin), "properties", this)), {}, {
          username: {
            type: String
          },
          password: {
            type: String
          },
          errorMSG: {
            type: String
          },
          hidePassword: {
            type: Boolean
          }
        });
      }
    }, {
      key: "styles",
      get: function get() {
        return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(AppHaxSiteLogin), "styles", this)), [(0, _index.css)(_templateObject4_d772e570c0ce11ecbdb54bb05e9423ad || (_templateObject4_d772e570c0ce11ecbdb54bb05e9423ad = babelHelpers.taggedTemplateLiteral(["\n        :host {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n        }\n        #inputcontainer{\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n        }\n        a{\n            color: red;\n        }\n\n        // This does not work\n        #errorText > p {\n            visibility: hidden;\n            background-color: lightblue;\n            color: red;\n            font-weight: bold;\n        }\n        rpg-character {\n          display: block;\n          margin: 10px;\n        }\n        .external {\n          text-align: center;\n        }\n        "])))]);
      }
    }]);
    return AppHaxSiteLogin;
  }(_simpleColors.SimpleColors);

  _exports.AppHaxSiteLogin = AppHaxSiteLogin;
  customElements.define(AppHaxSiteLogin.tag, AppHaxSiteLogin);
});