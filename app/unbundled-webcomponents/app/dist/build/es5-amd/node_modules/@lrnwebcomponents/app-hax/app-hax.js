define(["exports", "meta", "require", "../../lit/index.js", "../utils/utils.js", "../../mobx/dist/mobx.esm.js", "./lib/v1/AppHaxStore.js", "./lib/v1/AppHaxBackendAPI.js", "./lib/v1/AppHaxRouter.js", "./lib/v1/app-hax-steps.js", "./lib/v1/app-hax-label.js", "./lib/v1/app-hax-top-bar.js", "./lib/v1/app-hax-site-button.js"], function (_exports, meta, _require, _index, _utils, _mobxEsm, _AppHaxStore, _AppHaxBackendAPI, _AppHaxRouter, _appHaxSteps, _appHaxLabel, _appHaxTopBar, _appHaxSiteButton) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.AppHax = void 0;
  meta = _interopRequireWildcard(meta);
  _require = _interopRequireWildcard(_require);

  var _templateObject_7d12e8f0c0ce11ecbdb54bb05e9423ad, _templateObject2_7d12e8f0c0ce11ecbdb54bb05e9423ad, _templateObject3_7d12e8f0c0ce11ecbdb54bb05e9423ad, _templateObject4_7d12e8f0c0ce11ecbdb54bb05e9423ad, _templateObject5_7d12e8f0c0ce11ecbdb54bb05e9423ad, _templateObject6_7d12e8f0c0ce11ecbdb54bb05e9423ad, _templateObject7_7d12e8f0c0ce11ecbdb54bb05e9423ad;

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || babelHelpers.typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var haxLogo = new URL("./lib/assets/images/HAXLogo.svg", meta.url).href; // toggle store darkmode

  function darkToggle(e) {
    if (e.matches) {
      // dark mode
      _AppHaxStore.store.darkMode = true;
    } else {
      // light mode
      _AppHaxStore.store.darkMode = false;
    }
  }

  var AppHax = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(AppHax, _LitElement);

    var _super = _createSuper(AppHax);

    function AppHax() {
      var _this;

      babelHelpers.classCallCheck(this, AppHax);
      _this = _super.call(this);
      _this.userMenuOpen = false;
      _this.courses = [];
      _this.activeItem = {};
      _this.phrases = {
        new: ["What's ya name?", "HAX to the moon", "Welcome to the Jungle", "We like to party", "Build something awesome", "Everything is awesome!", "Everything is cool when you're part of the team", "When you're living our dream"],
        return: ["Welcome back, take 2?", "That wasn't very long", "Sup?", "You again? Awesome!", "Let's do this", "There can only be one ring...", "There is another", "Fancy that, I love HAX and you show up"]
      };
      _this.isNewUser = null;
      _this.routes = [{
        path: "createSite-step-1",
        component: "fake",
        step: 1,
        id: "step-1",
        label: "Welcome",
        statement: "Let's start a new journey!"
      }, {
        path: "createSite-step-2",
        component: "fake",
        step: 2,
        id: "step-2",
        label: "Pick type",
        statement: "What type of journey is this?"
      }, {
        path: "createSite-step-3",
        component: "fake",
        step: 3,
        id: "step-3",
        label: "Theme Select",
        statement: "What's it look like?"
      }, {
        path: "createSite-step-4",
        component: "fake",
        step: 4,
        id: "step-4",
        label: "Name",
        statement: "Name this journey"
      }, {
        path: "createSite-step-5",
        component: "fake",
        step: 5,
        id: "step-5",
        label: "Loading",
        statement: "Get ready for your journey"
      }, {
        path: "/",
        component: "fake",
        name: "home",
        label: "Welcome back",
        statement: "Let's explore HAX land"
      }, {
        path: "/search",
        component: "fake-search-e",
        name: "search",
        label: "Search",
        statement: "Discover active adventures"
      }, {
        path: "/(.*)",
        component: "fake",
        name: "404",
        label: "404 :[",
        statement: "it's not you.. it's me"
      }];
      _this.searchTerm = "";
      _this.appMode = "";
      _this.soundIcon = ""; // full on store that does the heavy lifting

      _this.store = _AppHaxStore.store; // source for reading in the store if different than default site.json

      _this.source = ""; // centralized sound source to not flood sounds when playing

      _this.sound = new Audio();
      _this.source = new URL("../demo/sites.json", meta.url).href; // @todo need this from app deploy itself

      new Promise(function (res, rej) {
        return _require.default(["../simple-modal/simple-modal.js"], res, rej);
      });
      (0, _mobxEsm.autorun)(function () {
        _this.isNewUser = (0, _mobxEsm.toJS)(_AppHaxStore.store.isNewUser);

        if (_this.isNewUser && _this.appMode !== "create") {
          _this.appMode = "create";
          setTimeout(function () {
            _AppHaxStore.store.createSiteSteps = true;
          }, 0);
        }
      });
      (0, _mobxEsm.autorun)(function () {
        _this.userName = (0, _mobxEsm.toJS)(_AppHaxStore.store.user.name);
      });
      (0, _mobxEsm.autorun)(function () {
        _this.searchTerm = (0, _mobxEsm.toJS)(_AppHaxStore.store.searchTerm);
      });
      /**
       * When location changes update activeItem / mode of app
       */

      (0, _mobxEsm.autorun)( /*#__PURE__*/babelHelpers.asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var location;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (_AppHaxStore.store.location && _AppHaxStore.store.location.route) {
                  // get the id from the router
                  location = (0, _mobxEsm.toJS)(_AppHaxStore.store.location); // verify this is a step vs other operations

                  if (!location.route.step) {
                    if (location.route.name === "404") {
                      _AppHaxStore.store.createSiteSteps = false;
                      _this.appMode = "404";
                      setTimeout(function () {
                        _AppHaxStore.store.toast("the page miss.. it burns!!!", 3000, {
                          fire: true,
                          walking: true
                        });
                      }, 500);
                    } else if (location.route.name === "home" || location.route.name === "search") {
                      // store.manifest = await AppHaxAPI.makeCall('getSitesList');
                      _this.appMode = "home";
                    } else {
                      console.warn(location.route);
                    }
                  } else {
                    _this.appMode = "create";
                    setTimeout(function () {
                      _AppHaxStore.store.createSiteSteps = true;
                    }, 0);
                  }
                }

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }))); // AutoRun block to detect to detect if site.structure is null but step == 3, set step to 2.

      (0, _mobxEsm.autorun)(function () {
        if (_AppHaxStore.store.routes.length > 0 && _AppHaxStore.store.location === null) {
          _AppHaxStore.store.location = (0, _mobxEsm.toJS)(_AppHaxStore.store.routes[0]);
        }
      }); // manage dark mode
      // only set this initially if we don't have an app state of our own

      if ((0, _utils.localStorageGet)("app-hax-darkMode", null) === null) {
        _AppHaxStore.store.darkMode = window.matchMedia("(prefers-color-scheme: dark)").matches;
      }

      (0, _mobxEsm.autorun)(function () {
        (0, _utils.localStorageSet)("app-hax-darkMode", (0, _mobxEsm.toJS)(_AppHaxStore.store.darkMode));

        if ((0, _mobxEsm.toJS)(_AppHaxStore.store.darkMode)) {
          document.body.classList.add("dark-mode");

          _AppHaxStore.store.toast("I'm ascared of the dark", 2000, {
            fire: true
          });
        } else {
          document.body.classList.remove("dark-mode");

          _AppHaxStore.store.toast("Sunny day it is", 2000, {
            hat: "random"
          });
        }
      });
      (0, _mobxEsm.autorun)(function () {
        var mode = (0, _mobxEsm.toJS)(_AppHaxStore.store.appMode);

        if (mode) {
          document.body.classList.remove("app-hax-search");
          document.body.classList.remove("app-hax-create");
          document.body.classList.remove("app-hax-404");
          document.body.classList.remove("app-hax-home");
          document.body.classList.add("app-hax-".concat(mode));
        }
      }); // App is ready and the user is Logged in

      (0, _mobxEsm.autorun)(function () {
        if ((0, _mobxEsm.toJS)(_AppHaxStore.store.appReady) && (0, _mobxEsm.toJS)(_AppHaxStore.store.isLoggedIn)) {
          console.log("I am ready to get sites list"); // Need this for the auto run when testing new user

          var appSettings = (0, _mobxEsm.toJS)(_AppHaxStore.store.appSettings);
          setTimeout( /*#__PURE__*/babelHelpers.asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
            var results;
            return regeneratorRuntime.wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    _context2.next = 2;
                    return _AppHaxBackendAPI.AppHaxAPI.makeCall("getSitesList");

                  case 2:
                    results = _context2.sent;
                    _AppHaxStore.store.manifest = results;
                    console.log("Manifest Length: ".concat(_AppHaxStore.store.manifest.items.length));

                  case 5:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          })), 0);
        } else if ((0, _mobxEsm.toJS)(_AppHaxStore.store.appReady) && !(0, _mobxEsm.toJS)(_AppHaxStore.store.isLoggedIn)) {
          setTimeout(function () {
            console.log("We in App-Hax - Running Log in");

            _this.login();
          }, 0);
        }
      });
      return _this;
    }

    babelHelpers.createClass(AppHax, [{
      key: "playSound",
      value: // eslint-disable-next-line class-methods-use-this
      function playSound(sound) {
        if (_AppHaxStore.store.soundStatus) {
          try {
            switch (sound) {
              case "click":
              case "click2":
              case "coin":
              case "coin2":
              case "hit":
              case "success":
                this.audio = new Audio(new URL("./lib/assets/sounds/".concat(sound, ".mp3"), meta.url).href);
                this.audio.play();
                break;

              default:
                this.audio = new Audio(new URL("./lib/assets/sounds/hit.mp3", meta.url).href);
                this.audio.play();
                console.warn("".concat(sound, " is not a valid sound file yet"));
                break;
            }
          } catch (e) {
            console.warn(e);
          }
        }
      }
    }, {
      key: "connectedCallback",
      value: function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(AppHax.prototype), "connectedCallback", this).call(this);
        window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", darkToggle);
      }
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        window.matchMedia("(prefers-color-scheme: dark)").removeEventListener("change", darkToggle);
        babelHelpers.get(babelHelpers.getPrototypeOf(AppHax.prototype), "disconnectedCallback", this).call(this);
      }
    }, {
      key: "getData",
      value: // eslint-disable-next-line class-methods-use-this
      function getData() {
        var _this2 = this;

        fetch(this.source).then(function (response) {
          return response.json();
        }).then(function (data) {
          _this2.courses = [];
          data.items.forEach(function (item) {
            var courseInfo = {
              title: item.title,
              description: item.description,
              link: (0, _mobxEsm.toJS)(_AppHaxStore.store.sitesBase).concat(item.slug),
              icon: item.metadata.theme.variables ? item.metadata.theme.variables.icon : ""
            };

            _this2.courses.push(courseInfo);
          });
        });
      } // eslint-disable-next-line class-methods-use-this

    }, {
      key: "reset",
      value: function reset() {
        var reload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

        // localStorage possible to be blocked by permission of system
        try {
          window.localStorage.removeItem("app-hax-step");
          window.localStorage.removeItem("app-hax-darkMode");
          window.localStorage.removeItem("app-hax-soundStatus");
          window.localStorage.removeItem("app-hax-site");

          if (reload) {
            window.location = document.querySelector("base").href;
          }
        } catch (e) {
          console.warn(e);
        }
      } // eslint-disable-next-line class-methods-use-this

    }, {
      key: "login",
      value: function login() {
        var _this3 = this;

        console.log("Login Function in App-HAX ran");
        new Promise(function (res, rej) {
          return _require.default(["./lib/v1/app-hax-site-login.js"], res, rej);
        }).then(function () {
          var _detail;

          var p = document.createElement("app-hax-site-login");

          if (_this3.querySelector('[slot="externalproviders"]')) {
            var cloneSlot = _this3.querySelector('[slot="externalproviders"]').cloneNode(true);

            p.appendChild(cloneSlot);
          }

          var evt = new CustomEvent("simple-modal-show", {
            bubbles: true,
            cancelable: true,
            detail: (_detail = {
              title: "Character select",
              modal: true,
              elements: {
                content: p
              }
            }, babelHelpers.defineProperty(_detail, "modal", true), babelHelpers.defineProperty(_detail, "invokedBy", _this3), babelHelpers.defineProperty(_detail, "styles", {
              "--simple-modal-titlebar-background": "orange",
              "--simple-modal-titlebar-color": "black",
              "--simple-modal-width": "25vw",
              "--simple-modal-min-width": "300px",
              "--simple-modal-z-index": "100000000",
              "--simple-modal-height": "40vh",
              "--simple-modal-min-height": "400px",
              "--simple-modal-titlebar-height": "40px"
            }), _detail)
          });

          _this3.dispatchEvent(evt);
        });
      }
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this4 = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(AppHax.prototype), "updated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(AppHax.prototype), "updated", this).call(this, changedProperties);
        } // update the store for step when it changes internal to our step flow


        changedProperties.forEach(function (oldValue, propName) {
          if (["routes", "appMode"].includes(propName)) {
            _AppHaxStore.store[propName] = _this4[propName];
          }
        });
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated(changedProperties) {
        var _this5 = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(AppHax.prototype), "firstUpdated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(AppHax.prototype), "firstUpdated", this).call(this, changedProperties);
        }

        new Promise(function (res, rej) {
          return _require.default(["../../wired-elements/lib/wired-button.js"], res, rej);
        });
        new Promise(function (res, rej) {
          return _require.default(["./lib/v1/app-hax-toast.js"], res, rej);
        });
        new Promise(function (res, rej) {
          return _require.default(["./lib/v1/app-hax-wired-toggle.js"], res, rej);
        });
        new Promise(function (res, rej) {
          return _require.default(["./lib/v1/app-hax-search-bar.js"], res, rej);
        });
        new Promise(function (res, rej) {
          return _require.default(["./lib/v1/app-hax-search-results.js"], res, rej);
        });
        new Promise(function (res, rej) {
          return _require.default(["../rpg-character/rpg-character.js"], res, rej);
        });
        new Promise(function (res, rej) {
          return _require.default(["./lib/random-word/random-word.js"], res, rej);
        });
        this.dispatchEvent(new CustomEvent("app-hax-loaded", {
          composed: true,
          bubbles: true,
          cancelable: false,
          detail: true
        }));
        _AppHaxStore.store.appReady = true;
        (0, _mobxEsm.autorun)(function () {
          if ((0, _mobxEsm.toJS)(_AppHaxStore.store.appReady)) {
            document.body.classList.add("app-loaded");
          } else {
            document.body.classList.remove("app-loaded");
          }
        }); // play sound when we animate the banner in

        this.shadowRoot.querySelector("app-hax-label").addEventListener("animationend", function (e) {
          if (e.animationName === "scrollin") {
            _AppHaxStore.store.appEl.playSound("coin2");
          }
        });
        _AppHaxStore.store.appEl = this;
        (0, _mobxEsm.autorun)(function () {
          if (_AppHaxStore.store.activeItem) {
            _this5.activeItem = (0, _mobxEsm.toJS)(_AppHaxStore.store.activeItem);
          }
        });
        (0, _mobxEsm.autorun)(function () {
          _this5.soundIcon = (0, _mobxEsm.toJS)(_AppHaxStore.store.soundStatus) ? new URL("./lib/assets/images/FullVolume.svg", meta.url).href : new URL("./lib/assets/images/Silence.svg", meta.url).href;

          if (!(0, _mobxEsm.toJS)(_AppHaxStore.store.soundStatus)) {
            _AppHaxStore.store.toast("Sound off.. hey.. HELLO!?!", 2000, {
              fire: true
            });
          } else {
            _AppHaxStore.store.toast("Can you hear me now? Good.", 2000, {
              hat: "random"
            });
          }
        });
      }
    }, {
      key: "soundToggle",
      value: function soundToggle(e) {
        _AppHaxStore.store.soundStatus = !(0, _mobxEsm.toJS)(_AppHaxStore.store.soundStatus);
        (0, _utils.localStorageSet)("app-hax-soundStatus", (0, _mobxEsm.toJS)(_AppHaxStore.store.soundStatus));
      }
    }, {
      key: "toggleMenu",
      value: function toggleMenu() {
        this.userMenuOpen = !this.userMenuOpen;
      }
    }, {
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_7d12e8f0c0ce11ecbdb54bb05e9423ad || (_templateObject_7d12e8f0c0ce11ecbdb54bb05e9423ad = babelHelpers.taggedTemplateLiteral(["<app-hax-router></app-hax-router>\n      <header>\n        <app-hax-top-bar>\n          <img\n            class=\"haxLogo\"\n            src=\"", "\"\n            slot=\"left\"\n            alt=\"\"\n            loading=\"lazy\"\n            decoding=\"async\"\n          />\n          <app-hax-search-bar\n            slot=\"center\"\n            ?disabled=\"", "\"\n          ></app-hax-search-bar>\n          <wired-button\n            elevation=\"1\"\n            slot=\"right\"\n            class=\"soundToggle\"\n            @click=\"", "\"\n          >\n            <img\n              src=\"", "\"\n              alt=\"\"\n              loading=\"lazy\"\n              decoding=\"async\"\n            />\n          </wired-button>\n          <app-hax-wired-toggle slot=\"right\"></app-hax-wired-toggle>\n          <div class=\"space-hack\" slot=\"right\"></div>\n          <rpg-character\n            class=\"topbar-character\"\n            seed=\"", "\"\n            slot=\"right\"\n            @click=\"", "\"\n          ></rpg-character>\n          <div\n            slot=\"right\"\n            class=\"user-menu ", "\"\n          >\n            <button>Site settings</button>\n            <button>Site outline</button>\n            <button>New Journey</button>\n            <button>Account info</button>\n            <button>log out</button>\n          </div>\n        </app-hax-top-bar>\n      </header>\n      <main>\n        <div class=\"label\">\n          <app-hax-label>\n            ", "\n          </app-hax-label>\n        </div>\n        <random-word\n          key=\"", "\"\n          .phrases=\"", "\"\n          @click=\"", "\"\n        ></random-word>\n        <section class=\"content\">", "</section>\n      </main>"])), haxLogo, this.isNewUser, this.soundToggle, this.soundIcon, this.userName, this.toggleMenu, this.userMenuOpen ? "open" : "", this.activeItem ? (0, _index.html)(_templateObject2_7d12e8f0c0ce11ecbdb54bb05e9423ad || (_templateObject2_7d12e8f0c0ce11ecbdb54bb05e9423ad = babelHelpers.taggedTemplateLiteral(["\n                  <h1>", "</h1>\n                  <div slot=\"subtitle\">", "</div>\n                "])), this.activeItem.label, this.activeItem.statement) : "", this.isNewUser ? "new" : "return", this.phrases, this.getNewWord, this.appBody(this.appMode));
      }
    }, {
      key: "getNewWord",
      value: function getNewWord() {
        this.shadowRoot.querySelector("random-word").getNewWord();
      }
    }, {
      key: "appBody",
      value: function appBody(routine) {
        switch (routine) {
          case "home":
          case "search":
            return this.templateHome();
            break;

          case "create":
            return this.templateCreate();
            break;

          case "404":
          default:
            return this.template404();
            break;
        }
      }
    }, {
      key: "templateHome",
      value: function templateHome() {
        return (0, _index.html)(_templateObject3_7d12e8f0c0ce11ecbdb54bb05e9423ad || (_templateObject3_7d12e8f0c0ce11ecbdb54bb05e9423ad = babelHelpers.taggedTemplateLiteral([" ", "\n\n      <app-hax-search-results></app-hax-search-results>"])), !this.searchTerm ? (0, _index.html)(_templateObject4_7d12e8f0c0ce11ecbdb54bb05e9423ad || (_templateObject4_7d12e8f0c0ce11ecbdb54bb05e9423ad = babelHelpers.taggedTemplateLiteral([" <div class=\"start-journey\">\n            <a\n              href=\"createSite-step-1\"\n              @click=\"", "\"\n              tabindex=\"-1\"\n            >\n              <app-hax-site-button\n                label=\"> Start new journey\"\n              ></app-hax-site-button>\n            </a>\n          </div>"])), this.startJourney) : "");
      } // eslint-disable-next-line class-methods-use-this

    }, {
      key: "templateCreate",
      value: function templateCreate() {
        return (0, _index.html)(_templateObject5_7d12e8f0c0ce11ecbdb54bb05e9423ad || (_templateObject5_7d12e8f0c0ce11ecbdb54bb05e9423ad = babelHelpers.taggedTemplateLiteral(["<app-hax-steps></app-hax-steps>"])));
      }
    }, {
      key: "template404",
      value: function template404() {
        return (0, _index.html)(_templateObject6_7d12e8f0c0ce11ecbdb54bb05e9423ad || (_templateObject6_7d12e8f0c0ce11ecbdb54bb05e9423ad = babelHelpers.taggedTemplateLiteral([" <div class=\"four04\">\n      <a\n        href=\"createSite-step-1\"\n        class=\"start-journey\"\n        @click=\"", "\"\n        tabindex=\"-1\"\n      >\n        <app-hax-site-button\n          label=\"> Start a new journey\"\n        ></app-hax-site-button>\n      </a>\n      <rpg-character\n        class=\"four04-character\"\n        fire\n        walking\n        seed=\"", "\"\n      ></rpg-character>\n    </div>"])), this.startJourney, this.userName);
      }
    }, {
      key: "startJourney",
      value: function startJourney(e) {
        _AppHaxStore.store.step = 1;
        this.appMode = "create";
      }
    }], [{
      key: "tag",
      get: function get() {
        return "app-hax";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          courses: {
            type: Array
          },
          source: {
            type: String
          },
          userName: {
            type: String
          },
          activeItem: {
            type: Object
          },
          soundIcon: {
            type: String
          },
          routes: {
            type: Array
          },
          searchTerm: {
            type: String
          },
          appMode: {
            type: String
          },
          // minor context of what we're doing in the app for rendering
          isNewUser: {
            type: Boolean
          },
          phrases: {
            type: Object
          },
          userMenuOpen: {
            type: Boolean
          }
        };
      }
    }, {
      key: "styles",
      get: function get() {
        return [(0, _index.css)(_templateObject7_7d12e8f0c0ce11ecbdb54bb05e9423ad || (_templateObject7_7d12e8f0c0ce11ecbdb54bb05e9423ad = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n        .topbar-character {\n          transform: scale(0.4, 0.4);\n          margin: -36px -35px 0px 0px;\n          vertical-align: text-top;\n          position: fixed;\n          top: 0px;\n          right: 0px;\n          overflow: hidden;\n          height: 120px;\n          cursor: pointer;\n        }\n        .content {\n          text-align: center;\n          margin-top: 32px;\n        }\n        .four04-character {\n          margin-top: 100px;\n          transform: scale(2);\n        }\n        .start-journey {\n          display: flex;\n          justify-content: center;\n        }\n        app-hax-top-bar {\n          top: 0;\n          z-index: 1000;\n          right: 0;\n          left: 0;\n          position: fixed;\n        }\n        .label {\n          text-align: center;\n          margin-top: 48px;\n        }\n        app-hax-label {\n          animation: 0.8s ease-in-out 0s scrollin;\n          -webkit-animation: 0.8s ease-in-out 0s scrollin;\n          display: block;\n        }\n        @media (prefers-reduced-motion: reduce) {\n          app-hax-label {\n            animation: none;\n            -webkit-animation: none;\n          }\n        }\n        app-hax-label h1 {\n          font-weight: normal;\n          font-size: 4vw;\n          margin: 0;\n          padding: 0;\n        }\n        @keyframes scrollin {\n          from {\n            margin-top: -240px;\n            margin-bottom: 240px;\n          }\n          to {\n            margin-top: 0;\n            margin-bottom: 0;\n          }\n        }\n        .haxLogo {\n          height: 40px;\n          width: 40px;\n          background-color: white;\n          margin: 4px;\n        }\n        .space-hack {\n          display: inline-flex;\n          width: 64px;\n          height: 48px;\n        }\n        .soundToggle {\n          margin-right: 16px;\n          position: relative;\n          display: inline-flex;\n          vertical-align: top;\n        }\n        .soundToggle img {\n          width: 24px;\n          height: 24px;\n        }\n        app-hax-search-bar {\n          vertical-align: middle;\n          display: inline-flex;\n        }\n        main {\n          margin-top: 64px;\n        }\n        .user-menu {\n          display: none;\n        }\n        .user-menu.open {\n          display: block;\n          top: 48px;\n          right: 0px;\n          position: absolute;\n          border: 1px solid black;\n          background-color: white;\n        }\n        .user-menu.open button {\n          display: block;\n          width: 100%;\n          margin: 0;\n          padding: 8px;\n          font-size: 20px;\n          font-family: \"Press Start 2P\", sans-serif;\n          color: black;\n          background-color: white;\n        }\n        .user-menu.open button:hover,\n        .user-menu.open button:active,\n        .user-menu.open button:focus {\n          background-color: black;\n          color: white;\n        }\n        random-word {\n          transform: rotate(25deg);\n          position: absolute;\n          right: 10px;\n          top: 120px;\n          padding: 12px;\n          font-size: 12px;\n          border: 4px solid black;\n          background-color: yellow;\n          color: black;\n          width: 100px;\n          word-wrap: break-word;\n          text-align: center;\n          cursor: pointer;\n          user-select: none;\n          opacity: 1;\n          visibility: visible;\n          transition: all 0.3s ease-in-out;\n        }\n        @media (max-width: 680px) {\n          random-word {\n            visibility: none;\n            opacity: 0;\n          }\n        }\n      "])))];
      }
    }]);
    return AppHax;
  }(_index.LitElement);

  _exports.AppHax = AppHax;
  customElements.define(AppHax.tag, AppHax);
  window.AppHax = window.AppHax || {};

  window.AppHax.requestAvailability = function () {
    if (!window.AppHax.instance) {
      window.AppHax.instance = document.querySelector(AppHax.tag);
    }

    return window.AppHax.instance;
  };
});