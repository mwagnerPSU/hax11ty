import{html as t,css as e}from"../../../../lit/index.js";import"./AppHaxRouter.js";import{SimpleColors as s}from"../../../simple-colors/simple-colors.js";import{autorun as i,toJS as a}from"../../../../mobx/dist/mobx.esm.js";import{store as p}from"./AppHaxStore.js";import{localStorageSet as o,localStorageGet as n}from"../../../utils/utils.js";import"../../../../scrollable-component/index.js";import"./app-hax-site-button.js";import"./app-hax-hat-progress.js";import"./app-hax-button.js";export class AppHaxSteps extends s{static get tag(){return"app-hax-steps"}constructor(){super(),this.stepRoutes=[],this._progressReady=!1,this.step=null,this.loaded=!1,this.themeNames=[],this.appSettings={},i((()=>{this.appSettings=a(p.appSettings),this.themeNames=Object.keys(this.appSettings.themes)})),i((()=>{o("app-hax-step",a(p.step))})),i((()=>{o("app-hax-site",a(p.site)),this.step=p.stepTest(this.step)})),i((()=>{if(a(p.createSiteSteps)){a(p.location);this.step=p.stepTest(this.step)}})),i((()=>{const t=a(p.routes);this.stepRoutes=t.filter((t=>t.step))}))}static get properties(){return{...super.properties,step:{type:Number,reflect:!0},stepRoutes:{type:Array},themeNames:{type:Array},loaded:{type:Boolean,reflect:!0},appSettings:{type:Object}}}chooseStructure(t){const{value:e}=t.target;p.site.structure=e,p.appEl.playSound("click2")}chooseType(t){const{value:e}=t.target;p.site.type=e,p.appEl.playSound("click2")}chooseTheme(t){const{value:e}=t.target;p.site.theme=e,p.appEl.playSound("click2")}chooseName(t){const e=this.shadowRoot.querySelector("#sitename").value;p.site.name=e,p.appEl.playSound("click2")}progressReady(t){t.detail&&(this._progressReady=!0,5===this.step&&setTimeout((()=>{this.shadowRoot.querySelector("app-hax-hat-progress").process()}),300))}updated(t){super.updated&&super.updated(t),t.forEach(((t,e)=>{4===this.step&&"step"===e&&this.shadowRoot&&(this.shadowRoot.querySelector("#sitename").value=a(p.site.name)),5===this.step&&"step"===e&&this.shadowRoot&&this._progressReady&&setTimeout((()=>{this.shadowRoot.querySelector("app-hax-hat-progress").process()}),600),"step"===e&&(p[e]=this[e])}))}connectedCallback(){super.connectedCallback(),window.addEventListener("resize",this.maintainScroll.bind(this))}disconnectedCallback(){window.removeEventListener("resize",this.maintainScroll.bind(this)),super.disconnectedCallback()}maintainScroll(){this.shadowRoot&&this.step&&(this.scrollToThing(`#step-${this.step}`,{behavior:"instant",block:"nearest",inline:"nearest"}),setTimeout((()=>{this.scrollToThing(`#step-${this.step}`,{behavior:"instant",block:"nearest",inline:"nearest"})}),100))}firstUpdated(t){super.firstUpdated&&super.firstUpdated(t),setTimeout((()=>{null===this.step&&(this.step=1),this.scrollToThing(`#step-${this.step}`,{behavior:"instant",block:"nearest",inline:"nearest"})}),100),i((()=>{if(a(p.createSiteSteps)&&a(p.appReady)){const t=a(p.location);t.route&&t.route.step&&t.route.id&&setTimeout((()=>{this.scrollToThing("#".concat(t.route.id),{block:"nearest",inline:"nearest",behavior:"smooth"})}),300)}})),i((()=>{if(this.shadowRoot&&a(p.createSiteSteps)&&a(p.appReady)){const t=a(p.activeItem);t&&t.step&&!this.__overrideProgression&&this.shadowRoot.querySelector("#link-".concat(t.id)).click()}}))}scrollToThing(t,e){const s=void 0!==window.safari;this.shadowRoot.querySelector(".carousel-with-snapping-item.active-step")&&this.shadowRoot.querySelector(".carousel-with-snapping-item.active-step").classList.remove("active-step"),s?this.shadowRoot.querySelector(t).scrollIntoView():this.shadowRoot.querySelector(t).scrollIntoView(e),this.shadowRoot.querySelector(t).classList.add("active-step")}static get styles(){return[...super.styles,e`
        :host {
          display: block;
          color: var(--app-hax-accent-color, var(--accent-color));
        }
        scrollable-component {
          --scrollbar-width: 0px;
          --scrollbar-height: 0px;
          --scrollbar-padding: 0;
          --viewport-overflow-x: hidden;
          overflow: hidden;
        }
        #grid-container {
          display: grid;
          grid-template-columns: 200px 200px;
          background: transparent;
        }
        .carousel-with-snapping-track {
          display: grid;
          grid-auto-flow: column;
          grid-gap: 30px;
        }
        .carousel-with-snapping-item {
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: normal;
          scroll-snap-align: center;
          scroll-snap-stop: always;
          width: var(--viewport-width);
          font-size: 1.5rem;
          text-align: center;
          overflow-x: hidden;
          max-height: 70vh;
          padding-top: 3vh;
        }
        #step-links {
          padding: 0;
          margin: 0;
        }
        ul,li {
          list-style: none;
        }
        li {
          display: inline-flex;
          margin: 4px;
        }
        li {
          border: 1px solid black;
          border-radius: 50%;
          background-color: black;
        }
        li a {
          padding: 5px;
          width: 5px;
          height: 5px;
          margin: 0;
          display: block;
        }
        li a[disabled] {
          pointer-events: none;
        }
        li[disabled] {
          background-color: grey
        }
        li.active-step {
          background-color: orange;
        }
        app-hax-button {
          padding: 10px 0px 10px 0px;
          background: transparent;
        }
        #theme-container {
          display: flex;
          flex-direction: row;
          align-items: center;
          justify-content: center;
        }
        img {
          pointer-events: none;
        }
        #themeContainer {
          width: 70vw;
          height: 55vh;
        }
        .theme-button {
          background-color: transparent;
          border: none;
          margin: 8px;
          padding: 8px;
          width: 245px;
        }
        
        .theme-button div {
          font-family: 'Press Start 2P', sans-serif;
          font-size: 16px;
          margin-top: 16px;
        }
        .theme-button:focus,
        .theme-button:hover {
          outline: 4px solid var(--app-hax-accent-color, var(--accent-color));
          outline-offset: 4px;
          background-color: transparent;
          border: none;
          cursor: pointer;
        }
        #sitename {
          font-family: 'Press Start 2P', sans-serif;
          font-size: 64px;
          padding: 8px;
          width: 40vw;
          text-align: center;
        }
        app-hax-site-button {
          justify-content: center;
          --app-hax-site-button-width: 30vw;
          --app-hax-site-button-min-width: 240px;
        }
        app-hax-hat-progress {
          height: 400px;
          width: 400px;
          display: block;
        }

        @media (max-width: 800px) {
          .theme-button {
            width: unset;
            padding: 0;
          }
          .theme-button div {
            font-size: 12px;
            margin-top: 8px;
          }
          .theme-button img {
            height: 70px;
          }
          app-hax-site-button {
            width: 320px;
            max-width: 60vw;
            --app-hax-site-button-font-size: 2.5vw;
          }
          #sitename {
            width: 70vw;
            font-size: 20px;
          }
          #grid-container {
            grid-template-columns: 150px 150px;
          }
        }
        @media (max-height: 600px) {
          .carousel-with-snapping-item {
            padding-top: 4px;
            max-height: 57vh;
          }
          #sitename {
            width: 40vw;
            font-size: 14px;
          }
          app-hax-hat-progress {
            transform: scale(.5);
            margin-top: -18vh;
          }
        }
        @media (max-width: 500px) {
          app-hax-hat-progress {
            transform: scale(.5);
            margin-top: -15vh;
          }
        }
        @media (max-height: 400px) {
          .carousel-with-snapping-item {
            padding-top: 4px;
            max-height: 40vh;
          }
          app-hax-hat-progress {
            transform: scale(.3);
          }
          .carousel-with-snapping-item.active-step app-hax-hat-progress {
            position: fixed;
            top: 20%;
            left: 20%;
          }
        }
      `]}progressFinished(t){t.detail&&(this.loaded=!0,p.appEl.playSound("success"))}stepLinkClick(t){const e=parseInt(t.target.getAttribute("data-step"));this.step<e?t.preventDefault():this.step>e&&(1===e?(p.site.structure=null,p.site.type=null,p.site.theme=null):2===e?(p.site.type=null,p.site.theme=null):3===e&&(p.site.theme=null),this.step=e)}renderTypes(e){const s=a(p.site.structure);var i=t``;if("portfolio"===s)i=t`
        <app-hax-button
          tabindex="${2!==e?"-1":""}"
          @click=${this.chooseType}
          type="Technology"
        ></app-hax-button>
        <app-hax-button
          tabindex="${2!==e?"-1":""}"
          @click=${this.chooseType}
          type="Business"
        ></app-hax-button>
        <app-hax-button
          tabindex="${2!==e?"-1":""}"
          @click=${this.chooseType}
          type="Art"
        ></app-hax-button>
        <app-hax-button
          tabindex="${2!==e?"-1":""}"
          @click=${this.chooseType}
        ></app-hax-button>`;else i=t`
        <app-hax-button
          tabindex="${2!==e?"-1":""}"
          @click=${this.chooseType}
          type="6w"
        ></app-hax-button>
        <app-hax-button
          tabindex="${2!==e?"-1":""}"
          @click=${this.chooseType}
          type="15w"
        ></app-hax-button>
        <app-hax-button
          tabindex="${2!==e?"-1":""}"
          @click=${this.chooseType}
          type="training"
        ></app-hax-button>
        <app-hax-button
          tabindex="${2!==e?"-1":""}"
          @click=${this.chooseType}
        ></app-hax-button>`;return i}render(){return t`
      <div id="container">
        <ul id="step-links">
          ${this.stepRoutes.map((e=>t`<li
              ?disabled="${this.step<e.step}"
              class="${this.step===e.step?"active-step":""}">
                <a href="${e.path}"
                  ?disabled="${this.step<e.step}"
                  @click="${this.stepLinkClick}"
                  id="link-${e.id}"
                  title="${e.label}"
                  data-step="${e.step}"
                  ></a>
              </li>`))}
        </ul>
        <scrollable-component>
          <div class="carousel-with-snapping-track">
            <div class="carousel-with-snapping-item" id="step-1">
              <div class="step-wrapper">
                <app-hax-site-button
                  tabindex="${1!==this.step?"-1":""}"
                  label="> Course"
                  value="course"
                  @click=${this.chooseStructure}
                ></app-hax-site-button>
                <app-hax-site-button
                  tabindex="${1!==this.step?"-1":""}"
                  label="> Portfolio"
                  value="portfolio"
                  @click=${this.chooseStructure}
                ></app-hax-site-button>
              </div>
            </div>
            <div class="carousel-with-snapping-item" id="step-2">
              <div id="grid-container">
                ${this.renderTypes(this.step)}
              </div>
          </div>
          <div class="carousel-with-snapping-item" id="step-3">
              <div id="themeContainer">
                ${this.appSettings&&this.appSettings.themes?this.themeNames.map((e=>t`
                <button
                  aria-label="${this.appSettings.themes[e].name} theme"
                  value="${e}"
                  class="theme-button"
                  @click=${this.chooseTheme}
                  tabindex="${3!==this.step?"-1":""}"
                >
                  <img class="theme-img" src=${this.appSettings.themes[e].thumbnail} alt="" loading="lazy" decoding="async" />
                  <div>${this.appSettings.themes[e].name}</div>
                </button>
                `)):""}
              </div>
            </div>
            <div class="carousel-with-snapping-item" id="step-4">
              <input id="sitename"
              tabindex="${4!==this.step?"-1":""}">
              <app-hax-site-button
                  class="sitenamebtn"
                  tabindex="${4!==this.step?"-1":""}"
                  label="> Create journey"
                  @click=${this.chooseName}
                ></app-hax-site-button>
            </div>
            <div class="carousel-with-snapping-item" id="step-5">
              <app-hax-hat-progress
                @progress-ready="${this.progressReady}"
                @promise-progress-finished="${this.progressFinished}"
                tabindex="${5!==this.step?"-1":""}"
              ></app-hax-hat-progress>
            </div>
        </scrollable-component>
      </div>
    `}}customElements.define(AppHaxSteps.tag,AppHaxSteps);