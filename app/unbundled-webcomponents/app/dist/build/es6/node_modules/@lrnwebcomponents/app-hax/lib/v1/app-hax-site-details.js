import{LitElement as t,html as e,css as n}from"../../../../lit/index.js";export class AppHaxSiteDetails extends t{static get tag(){return"app-hax-site-details"}constructor(){super(),this.need="all need to succeed"}static get properties(){return{need:{type:String,reflect:!0}}}static get styles(){return n`
      :host {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: stretch;
      }

      .btn-group button {
        background-color: #3c7ff7;
        border: 1px solid #3c7ff7;
        color: white;
        padding: 15px 30px;
        cursor: pointer;
        width: 25%;
        display: flex;
      }

      .btn-group:after {
        content: '';
        clear: both;
        display: table;
      }

      .btn-group button:not(:last-child) {
        border-right: none;
      }

      .btn-group button:hover,
      .btn-group button:focus,
      .btn-group button:active {
        background-color: #02286d;
      }

      .flex-container > div {
        margin: 8px;
        flex-direction: 'row';
        justify-content: 'space-around';
        align-items: 'center';
        display: flex;
        border: 2px solid black;
      }

      @media (max-width: 500px) {
        .btn-group button {
          padding: 4px;
          margin: 4px 0;
        }
        .flex-container > div {
          margin: 0px;
        }
      }
    `}render(){return e`
      <div class="flex-container">
        <div class="btn-group">
          <button>created</button>
          <button>updated</button>
          <button>pages</button>
          <button>URL</button>
        </div>
      </div>

        <div class="flex-container">
          <div class="btn-group">
            <button>publish</button>
            <button>copy</button>
            <button>download</button>
            <button>delete</button>
          </div>
        </div>
      </div>
    `}}customElements.define(AppHaxSiteDetails.tag,AppHaxSiteDetails);